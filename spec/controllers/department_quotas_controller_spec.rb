require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe DepartmentQuotasController do

  def mock_department_quota(stubs={})
    @mock_department_quota ||= mock_model(DepartmentQuota, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all department_quotas as @department_quotas" do
      DepartmentQuota.stub(:all) { [mock_department_quota] }
      get :index
      assigns(:department_quotas).should eq([mock_department_quota])
    end
  end

  describe "GET show" do
    it "assigns the requested department_quota as @department_quota" do
      DepartmentQuota.stub(:find).with("37") { mock_department_quota }
      get :show, :id => "37"
      assigns(:department_quota).should be(mock_department_quota)
    end
  end

  describe "GET new" do
    it "assigns a new department_quota as @department_quota" do
      DepartmentQuota.stub(:new) { mock_department_quota }
      get :new
      assigns(:department_quota).should be(mock_department_quota)
    end
  end

  describe "GET edit" do
    it "assigns the requested department_quota as @department_quota" do
      DepartmentQuota.stub(:find).with("37") { mock_department_quota }
      get :edit, :id => "37"
      assigns(:department_quota).should be(mock_department_quota)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created department_quota as @department_quota" do
        DepartmentQuota.stub(:new).with({'these' => 'params'}) { mock_department_quota(:save => true) }
        post :create, :department_quota => {'these' => 'params'}
        assigns(:department_quota).should be(mock_department_quota)
      end

      it "redirects to the created department_quota" do
        DepartmentQuota.stub(:new) { mock_department_quota(:save => true) }
        post :create, :department_quota => {}
        response.should redirect_to(department_quota_url(mock_department_quota))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved department_quota as @department_quota" do
        DepartmentQuota.stub(:new).with({'these' => 'params'}) { mock_department_quota(:save => false) }
        post :create, :department_quota => {'these' => 'params'}
        assigns(:department_quota).should be(mock_department_quota)
      end

      it "re-renders the 'new' template" do
        DepartmentQuota.stub(:new) { mock_department_quota(:save => false) }
        post :create, :department_quota => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested department_quota" do
        DepartmentQuota.stub(:find).with("37") { mock_department_quota }
        mock_department_quota.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :department_quota => {'these' => 'params'}
      end

      it "assigns the requested department_quota as @department_quota" do
        DepartmentQuota.stub(:find) { mock_department_quota(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:department_quota).should be(mock_department_quota)
      end

      it "redirects to the department_quota" do
        DepartmentQuota.stub(:find) { mock_department_quota(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(department_quota_url(mock_department_quota))
      end
    end

    describe "with invalid params" do
      it "assigns the department_quota as @department_quota" do
        DepartmentQuota.stub(:find) { mock_department_quota(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:department_quota).should be(mock_department_quota)
      end

      it "re-renders the 'edit' template" do
        DepartmentQuota.stub(:find) { mock_department_quota(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested department_quota" do
      DepartmentQuota.stub(:find).with("37") { mock_department_quota }
      mock_department_quota.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the department_quotas list" do
      DepartmentQuota.stub(:find) { mock_department_quota }
      delete :destroy, :id => "1"
      response.should redirect_to(department_quotas_url)
    end
  end

end
