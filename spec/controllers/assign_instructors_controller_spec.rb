require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe AssignInstructorsController do

  def mock_assign_instructor(stubs={})
    @mock_assign_instructor ||= mock_model(AssignInstructor, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all assign_instructors as @assign_instructors" do
      AssignInstructor.stub(:all) { [mock_assign_instructor] }
      get :index
      assigns(:assign_instructors).should eq([mock_assign_instructor])
    end
  end

  describe "GET show" do
    it "assigns the requested assign_instructor as @assign_instructor" do
      AssignInstructor.stub(:find).with("37") { mock_assign_instructor }
      get :show, :id => "37"
      assigns(:assign_instructor).should be(mock_assign_instructor)
    end
  end

  describe "GET new" do
    it "assigns a new assign_instructor as @assign_instructor" do
      AssignInstructor.stub(:new) { mock_assign_instructor }
      get :new
      assigns(:assign_instructor).should be(mock_assign_instructor)
    end
  end

  describe "GET edit" do
    it "assigns the requested assign_instructor as @assign_instructor" do
      AssignInstructor.stub(:find).with("37") { mock_assign_instructor }
      get :edit, :id => "37"
      assigns(:assign_instructor).should be(mock_assign_instructor)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created assign_instructor as @assign_instructor" do
        AssignInstructor.stub(:new).with({'these' => 'params'}) { mock_assign_instructor(:save => true) }
        post :create, :assign_instructor => {'these' => 'params'}
        assigns(:assign_instructor).should be(mock_assign_instructor)
      end

      it "redirects to the created assign_instructor" do
        AssignInstructor.stub(:new) { mock_assign_instructor(:save => true) }
        post :create, :assign_instructor => {}
        response.should redirect_to(assign_instructor_url(mock_assign_instructor))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved assign_instructor as @assign_instructor" do
        AssignInstructor.stub(:new).with({'these' => 'params'}) { mock_assign_instructor(:save => false) }
        post :create, :assign_instructor => {'these' => 'params'}
        assigns(:assign_instructor).should be(mock_assign_instructor)
      end

      it "re-renders the 'new' template" do
        AssignInstructor.stub(:new) { mock_assign_instructor(:save => false) }
        post :create, :assign_instructor => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested assign_instructor" do
        AssignInstructor.stub(:find).with("37") { mock_assign_instructor }
        mock_assign_instructor.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :assign_instructor => {'these' => 'params'}
      end

      it "assigns the requested assign_instructor as @assign_instructor" do
        AssignInstructor.stub(:find) { mock_assign_instructor(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:assign_instructor).should be(mock_assign_instructor)
      end

      it "redirects to the assign_instructor" do
        AssignInstructor.stub(:find) { mock_assign_instructor(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(assign_instructor_url(mock_assign_instructor))
      end
    end

    describe "with invalid params" do
      it "assigns the assign_instructor as @assign_instructor" do
        AssignInstructor.stub(:find) { mock_assign_instructor(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:assign_instructor).should be(mock_assign_instructor)
      end

      it "re-renders the 'edit' template" do
        AssignInstructor.stub(:find) { mock_assign_instructor(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested assign_instructor" do
      AssignInstructor.stub(:find).with("37") { mock_assign_instructor }
      mock_assign_instructor.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the assign_instructors list" do
      AssignInstructor.stub(:find) { mock_assign_instructor }
      delete :destroy, :id => "1"
      response.should redirect_to(assign_instructors_url)
    end
  end

end
